fresh `A {

    fun h_a (m) () {
        handle (m ()) {
            case `A(x, k) -> k (2*x)
        }
    }

    fun double (x) { do `A(x) }

    fresh `A {

        fun h_a' (m) () {
            handle (m()) {
                case `A(x, k) -> k (3*x)
            }
        }

        fun triple (x) { do `A(x) }

        fun sextuple (x) () {triple(double(x)) }

        sig times_six : (Int) ~> Int
        fun times_six (x) { h_a (h_a' (sextuple (x))) () }

    }

}

times_six (7)
